<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pidvn.mappers.one.qa.oqc_check.OqcCheckMapper">

    <resultMap id="getOqcMasterData-result"
               type="pidvn.modules.qa.oqc_check.models.OqcDataVo">
        <result column="vi_name" property="viName" javaType="String"/>
        <result column="check_item_id" property="checkItemId" javaType="Integer"/>
        <result column="req_no" property="reqNo" javaType="String"/>
        <result column="qa_card" property="qaCard" javaType="String"/>
        <result column="number_of_sampling" property="numberOfSampling" javaType="Integer"/>
        <result column="reject_number" property="rejectNumber" javaType="Integer"/>
    </resultMap>
    <select id="getOqcMasterData" resultMap="getOqcMasterData-result">
        select
            I.id check_item_id, I.vi_name, M.*
        from oqc_check_item I
        left join oqc_master_data M on I.id = M.item
        and M.req_no = #{reqNo} and M.qa_card = #{qaCard}
    </select>


    <resultMap id="getOqcRequests-result"
               type="pidvn.modules.qa.oqc_check.models.OqcRequestVo">
        <result column="req_no" property="reqNo" javaType="String"/>
        <result column="qa_card" property="qaCard" javaType="String"/>
        <result column="created_at" property="createdAt" javaType="Date"/>
        <result column="request_status_name" property="requestStatusName" javaType="String"/>
        <result column="request_status_id" property="requestStatusId" javaType="Integer"/>
        <result column="created_by" property="createdBy" javaType="String"/>
        <result column="created_by_name" property="createdByName" javaType="String"/>
        <result column="date_code" property="dateCode" javaType="String"/>
        <result column="priority_name" property="priorityName" javaType="String"/>
        <result column="oqc_date" property="oqcDate" javaType="Date"/>
        <result column="delivery_date" property="deliveryDate" javaType="Date"/>
        <result column="sorting_qty" property="sortingQty" javaType="Float"/>
        <result column="is_special_request" property="isSpecialRequest" javaType="Integer"/>
        <result column="accepted_by" property="acceptedBy" javaType="String"/>
        <result column="special_remark" property="specialRemark" javaType="String"/>
        <result column="accepted_result" property="acceptedResult" javaType="String"/>

    </resultMap>
    <select id="getOqcRequests" resultMap="getOqcRequests-result">
        with
        T01 as (
            select
                R.id, R.qa_card, sum(R.qty) qty,
                GROUP_CONCAT(CONCAT(R.date_code, ':', R.qty) SEPARATOR ';') AS date_code
            from relay_date_code R
            group by R.qa_card
            order by R.id desc
        ),
        T02 as (
            select
                R.id, R.req_no, R.qa_card, SUBSTRING_INDEX(R.qa_card,'*',1) model,
                SUBSTRING_INDEX(SUBSTRING_INDEX(R.qa_card,'*',-2),'*',1) shift,
                R.created_at, R.oqc_request_status request_status_id, S.name request_status_name,
                R.oqc_date, R.judgment, T01.date_code, R.created_by, U.name created_by_name,
                R.priority, P.name priority_name, T01.qty, R.sorting_qty, R.remark, R.delivery_date, R.flag,
                R.is_special_request, R.accepted_by, R.special_remark, R.accepted_result
            from oqc_request R
            left join T01 on R.qa_card = T01.qa_card
            left join users U on U.username = R.created_by
            left join oqc_request_status S on R.oqc_request_status = S.id
            left join oqc_request_priority P on R.priority = P.id
            order by R.id
        )
        select * from T02
        where 1 = 1
        and (T02.flag != 0 or T02.flag is null)
        <if test="reqNo">
            and T02.req_no = #{reqNo}
        </if>
        <if test="requestStatusList != null and requestStatusList.size != 0">
            and T02.request_status_id in
            <foreach item="item" index="index" collection="requestStatusList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="requestDateRange != null and requestDateRange.size != 0">
            and DATE_FORMAT(T02.created_at, '%Y-%m-%d') between DATE_FORMAT(#{requestDateRange[0]}, '%Y-%m-%d') and DATE_FORMAT(#{requestDateRange[1]}, '%Y-%m-%d')
        </if>
        <if test="isAudit == 'TRUE'">
            and (T02.judgment != 'NG' or T02.judgment is null)
        </if>

        <if test="isAbnormal">
            and T02.is_special_request = 1
            -- and T02.accepted_result is null
        </if>


        order by T02.id desc

    </select>


    <resultMap id="getPsMasterData-result"
               type="pidvn.modules.qa.oqc_check.models.PsMasterVo"></resultMap>
    <select id="getPsMasterData" resultMap="getPsMasterData-result">
        with
            T01 as (
                select
                    A.cpn part_no, sum(A.qty) qty
                from material_controls A
                where A.record_type = 'CDL'
                  and plotno = #{qaCard}
                group by A.cpn
            ),
            T02 as (
                select distinct A.pnpa, A.pncomp from ps_masters A
                where 1=1
                  and A.pnpa = SUBSTRING_INDEX(#{qaCard}, '*', 1)
                order by A.pncomp asc
            )
        select T02.pncomp, T01.qty from T02
        left join T01 on T02.pncomp = T01.part_no


    </select>

    <resultMap id="getDateCode-result"
               type="pidvn.modules.qa.oqc_check.models.DateCodeVo">
        <result column="date_code" property="dateCode" javaType="String"/>
        <result column="date_marking" property="dateMarking" javaType="Integer"/>
        <result column="date_qa_card" property="dateQaCard" javaType="Integer"/>
        <result column="actual_scan_qty" property="actualScanQty" javaType="Integer"/>
    </resultMap>
    <select id="getDateCode" resultMap="getDateCode-result">
        with
        T01 as (
            select
                A.date_code, A.qty,
                SUBSTRING(A.date_code, 4, 2) date_marking,
                day(A.date) date_qa_card
            from relay_date_code A
            where 1=1
            and qa_card = #{qcCard}
        ),
        T02 as (
            select
                T01.*,
                (select
                sum(A.qty) qty
                from material_controls A
                where A.record_type = 'CDL'
                and plotno = #{qcCard}) actual_scan_qty
            from T01
        )
        select T02.*, ROUND((T02.qty/T02.actual_scan_qty*100),2) rate
        from T02
        where T02.date_marking = T02.date_qa_card
    </select>


</mapper>