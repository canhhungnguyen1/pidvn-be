<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pidvn.mappers.one.packing.oqc_request.PackingOqcRequestMapper">

    <resultMap id="summaryData-result"
               type="pidvn.modules.packing.oqc_request.models.DataSummaryVo">
    </resultMap>
    <select id="summaryData" resultMap="summaryData-result">
        <choose>
            <when test="type == 1">

            </when>
            <when test="type == 2">
                with
                T01 as (
                    select
                        R.id, R.qa_card, sum(R.qty) qty, SUBSTRING_INDEX(R.qa_card,'*', 1) model,
                        group_concat(R.date_code separator '; ') date_code
                    from relay_date_code R
                    group by R.qa_card
                ),
                T02 as (
                    select
                        T01.model, R.created_at, R.oqc_request_status request_status_id, ifnull(R.judgment, 'NA') judgment, T01.qty
                    from oqc_request R
                    left join T01 on R.qa_card = T01.qa_card
                    where 1 = 1
                    and DATE_FORMAT(R.created_at, '%Y-%m-%d') between DATE_FORMAT(#{fromDate}, '%Y-%m-%d') and DATE_FORMAT(#{toDate}, '%Y-%m-%d')
                ),
                T03 as (
                    select T02.model, T02.judgment, sum(T02.qty) qty from T02
                    group by T02.model, T02.judgment
                )
                select
                    T03.model,
                    sum(case when T03.judgment = 'OK' then T03.qty else 0 end) as ok,
                    sum(case when T03.judgment = 'NG' then T03.qty else 0 end) as ng,
                    sum(case when T03.judgment = 'NA' then T03.qty else 0 end) as na
                from T03
                group by T03.model;
            </when>
        </choose>
    </select>



    <resultMap id="getDateCodeRate-result"
               type="pidvn.modules.packing.oqc_request.models.DateCodeRateVo">
        <result column="date_code" property="dateCode" javaType="String"/>
        <result column="date_marking" property="dateMarking" javaType="Integer"/>
        <result column="date_qa_card" property="dateQaCard" javaType="Integer"/>
        <result column="actual_scan_qty" property="actualScanQty" javaType="Float"/>
    </resultMap>
    <select id="getDateCodeRate" resultMap="getDateCodeRate-result">
        with
            T01 as (
                select
                    A.date_code, A.qty,
                    SUBSTRING(A.date_code, 4, 2) date_marking,
            day(A.date) date_qa_card
        from relay_date_code A
        where 1=1
          and qa_card = #{qcCard}
            ),
            T02 as (
        select
            T01.*,
            (select
            sum(A.qty) qty
            from material_controls A
            where A.record_type = 'CDL'
            and plotno = #{qcCard}) actual_scan_qty
        from T01
            )
        select T02.*, ROUND((T02.qty/T02.actual_scan_qty*100),2) rate
        from T02
        where T02.date_marking = T02.date_qa_card
    </select>



    <resultMap id="getDataScan-result"
               type="pidvn.modules.packing.oqc_request.models.ModelVo">
        <result column="receive_qty" property="receiveQty" javaType="Float"/>
        <result column="scan_qty" property="scanQty" javaType="Float"/>
    </resultMap>
    <select id="getDataScan" resultMap="getDataScan-result">
        with
            T01 as (
                select A.model, sum(A.qty) qty from pur_wh_records A
                where 1=1
                  and A.record_type = 'RDC'
                  and A.qa_card = #{qaCard}
                group by A.model
                order by A.model asc
            ),
            T02 as (
                select A.cpn, sum(qty) qty from material_controls A
                where 1=1
                  and A.record_type = 'CDL'
                  and A.plotno = #{qaCard}
                group by A.cpn
            )
        select T01.model, T01.qty receive_qty, T02.qty scan_qty from T01
        left join T02 on T01.model = T02.cpn

    </select>

</mapper>