<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pidvn.mappers.one.iqc.IqcMapper">

    <resultMap id="getIqcRequests-result"
               type="pidvn.modules.iqc.models.IqcRequestDto">
        <result column="request_no" property="requestNo" javaType="String"/>
        <result column="slip_no" property="slipNo" javaType="String"/>
        <result column="requested_by" property="requestedBy" javaType="String"/>
        <result column="requested_by_name" property="requestedByName" javaType="String"/>
        <result column="status_name" property="statusName" javaType="String"/>
        <result column="created_at" property="createdAt" javaType="Date"/>
        <result column="type_name" property="typeName" javaType="String"/>
        <result column="class" property="classParam" javaType="String"/>
    </resultMap>
    <select id="getIqcRequests" resultMap="getIqcRequests-result">
        SELECT A.*, B.name requested_by_name, C.name status_name,
        case
            when A.type = 'N' then 'OUTSIDE'
            when A.type = 'S' then 'SORTING'
            when A.type = 'R' then 'RECHECK'
        end as type_name
        FROM iqc_request A
        left join users B on A.requested_by = B.username
        left join iqc_request_status C on A.status = C.id
        where 1=1
        <if test="dateRange != null and dateRange.size != 0">
            and DATE_FORMAT(A.created_at, '%Y-%m-%d') between DATE_FORMAT(#{dateRange[0]}, '%Y-%m-%d') and DATE_FORMAT(#{dateRange[1]}, '%Y-%m-%d')
        </if>
        and A.disable is null
        order by A.id desc
    </select>


    <resultMap id="getSlipNo-result"
               type="pidvn.modules.iqc.models.PurWhRecordDto">
        <result column="slip_no" property="slipNo" javaType="String"/>
    </resultMap>
    <select id="getSlipNo" resultMap="getSlipNo-result">
        SELECT distinct slip_no, invoice
        FROM pur_wh_records
        where 1=1
          AND record_type = 'IM'
          AND date >= NOW() - INTERVAL 20 MONTH
        order by id desc
    </select>


    <resultMap id="getPurWhRecords-result"
               type="pidvn.modules.iqc.models.PurWhRecordDto">
        <result column="lot_no" property="lotNo" javaType="String"/>
        <result column="lot_group" property="lotGroup" javaType="String"/>
    </resultMap>
    <select id="getPurWhRecords" resultMap="getPurWhRecords-result">
        select
            A.model,B.lot_group, A.lot_no, A.qty, A.date
        from pur_wh_records A
        left join lots B on A.lot_no = B.lot_no
        where 1=1
        <if test="slipNo != null">
            and A.slip_no = #{slipNo}
        </if>
        <if test="invoice != null">
            and A.invoice = #{invoice}
        </if>


    </select>


    <resultMap id="getIqcResults-result"
               type="pidvn.modules.iqc.models.IqcResultDto">
        <result column="lot_no" property="lotNo" javaType="String"/>
        <result column="class" property="classParam" javaType="String"/>
        <result column="lot_group" property="lotGroup" javaType="String"/>
        <result column="check_date" property="checkDate" javaType="Date"/>
        <result column="check_user_code" property="checkUserCode" javaType="String"/>
        <result column="check_user_name" property="checkUserName" javaType="String"/>
        <result column="key_in_id" property="keyInId" javaType="Integer"/>
        <result column="p_date" property="pDate" javaType="Date"/>
        <result column="user_id" property="userId" javaType="Integer"/>
        <result column="request_no" property="requestNo" javaType="String"/>
        <result column="created_at" property="createdAt" javaType="Date"/>
        <result column="updated_at" property="updatedAt" javaType="Date"/>
        <result column="level_of_control_1" property="levelOfControl1" javaType="String"/>
        <result column="level_of_control_2" property="levelOfControl2" javaType="String"/>
        <result column="check_sample" property="checkSample" javaType="Boolean"/>
    </resultMap>
    <select id="getIqcResults" resultMap="getIqcResults-result">
        select
            A.*, B.name check_user_name, B.username check_user_code,
            C.request_no, C.invoice, C.slip_no, C.supplier
        from iqc_results A
        left join users B on A.check_user = B.id
        left join iqc_request C on A.request_no = C.request_no
        where A.request_no = #{requestNo} order by id desc
    </select>



    <resultMap id="getIqcRequest-result"
               type="pidvn.modules.iqc.models.IqcRequestDto">
        <result column="request_no" property="requestNo" javaType="String"/>
        <result column="slip_no" property="slipNo" javaType="String"/>
        <result column="created_at" property="createdAt" javaType="Date"/>
        <result column="requested_by" property="requestedBy" javaType="String"/>
        <result column="requested_by_name" property="requestedByName" javaType="String"/>
        <result column="status_name" property="statusName" javaType="String"/>
        <result column="class" property="classParam" javaType="String"/>
    </resultMap>
    <select id="getIqcRequest" resultMap="getIqcRequest-result">
        select
            A.*, B.name requested_by_name, A.status, C.name status_name
        from iqc_request A
        left join users B on A.requested_by = B.username
        left join iqc_request_status C on A.status = C.id
        where request_no = #{requestNo}

    </select>



    <resultMap id="getLotsInventory-result"
               type="pidvn.modules.iqc.models.PihStoreDto">
        <result column="lot_group" property="lotGroup" javaType="String"/>
        <result column="lot_no" property="lotNo" javaType="String"/>
        <result column="iqc_date" property="iqcDate" javaType="Date"/>
        <result column="day_since_iqc" property="daySinceIqc" javaType="Integer"/>
        <result column="class_param" property="classParam" javaType="String"/>
        <result column="expired_date" property="expiredDate" javaType="Date"/>
        <result column="factory_code" property="factoryCode" javaType="String"/>
        <result column="request_no" property="requestNo" javaType="String"/>
    </resultMap>
    <select id="getLotsInventory" resultMap="getLotsInventory-result">
    with
    T01 as (
        SELECT t1.model, t1.lot_no, t1.check_date, t1.request_no,
            DATEDIFF(CURRENT_DATE, check_date) AS day_since_iqc
        FROM iqc_results AS t1
        WHERE t1.updated_at = (
            SELECT MAX(t2.updated_at)
            FROM iqc_results AS t2
            WHERE t2.lot_no = t1.lot_no
        )
        and t1.check_date >= (CURDATE() - INTERVAL 12 MONTH)
        -- and YEAR(t1.check_date) = YEAR(CURDATE())
        order by t1.id desc
    ),
    T02 as (
        select
            A.*, B.lot_group, T01.check_date, T01.day_since_iqc, B.expired_date, T01.request_no,
        ifnull(B.lot_group, SUBSTRING_INDEX(B.lot_no, '*', LENGTH(B.lot_no) - LENGTH(REPLACE(B.lot_no, '*', ''))))  AS lot_group_temp
        from pih_stores A
        left join T01 on A.lot_no = T01.lot_no
        left join lots B on A.lot_no = B.lot_no
        where A.wh > 0
    ),
    T03 as (
    -- Danh s√°ch model
        select A.name, A.classified, B.factory_code from model A
        left join (
            select A.id, A.name, B.factory_code from product_type A left join product B on A.product_id = B.id
        ) B on A.product_type_id = B.id
    )
    select
        T02.model, Upper(T02.lot_group) lot_group, T02.lot_group_temp, T02.lot_no, T02.request_no,
        T02.check_date iqc_date, T02.day_since_iqc, T03.classified, T03.factory_code,
        if(T03.classified = 'R','O','P') class_param,
        <if test="type == 'master'">
            sum(T02.wh) wh
        </if>
        <if test="type == 'detail'">
            T02.wh
        </if>
    from T02
    left join T03 on T02.model = T03.name
    <if test="type == 'master'">
        group by T02.model, T02.lot_group, T02.lot_group_temp
    </if>
    order by T02.lot_group asc, T02.day_since_iqc desc
    </select>

    <resultMap id="prepareDataCreateRequest-result"
               type="pidvn.modules.iqc.models.PihStoreDto">
        <result column="lot_group" property="lotGroup" javaType="String"/>
        <result column="lot_no" property="lotNo" javaType="String"/>
        <result column="expired_date" property="expiredDate" javaType="Date"/>
        <result column="class_param" property="classParam" javaType="String"/>

    </resultMap>
    <select id="prepareDataCreateRequest" resultMap="prepareDataCreateRequest-result">
        with
        T01 as (
            select A.lot_no from lots A
            where A.lot_group in
            <foreach item="item" index="index" collection="lotGroups"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        )
        select A.*, B.lot_group
        from pih_stores A
        left join lots B on A.lot_no = B.lot_no
        where 1=1
        AND A.lot_no in (select * from T01)
        AND A.wh > 0

    </select>



    <resultMap id="getPihStore-result"
               type="pidvn.modules.iqc.models.IqcResultDto">
        <result column="lot_no" property="lotNo" javaType="String"/>
        <result column="lot_group" property="lotGroup" javaType="String"/>
        <result column="p_date" property="pDate" javaType="Date"/>
    </resultMap>
    <select id="getPihStore" resultMap="getPihStore-result">
        with
        T01 as (
            select * from pih_stores A
            where 1=1
            and A.lot_no in
            <foreach item="item" index="index" collection="lotNos"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        ),
        T02 as (
            select
                T01.model, A.lot_group, T01.lot_no,
                T01.wh as qty, ifnull(A.expired_date, CURDATE()) date,
                ifnull(A.date, CURDATE()) p_date
            from T01
            left join lots A on T01.lot_no = A.lot_no
        )
        select * from T02
    </select>



    <resultMap id="getHistoryLevelOfControls-result"
               type="pidvn.modules.iqc.models.IqcResultDto">
        <result column="level_of_control_1" property="levelOfControl1" javaType="String"/>
        <result column="level_of_control_2" property="levelOfControl2" javaType="String"/>
        <result column="updated_at" property="updatedAt" javaType="Date"/>
        <result column="check_user" property="checkUser" javaType="String"/>
    </resultMap>
    <select id="getHistoryLevelOfControls" resultMap="getHistoryLevelOfControls-result">
        SELECT distinct A.model, A.level_of_control_1, A.level_of_control_2, A.updated_at, concat(B.name, ' - ', B.username ) check_user
        FROM iqc_results A
        LEFT JOIN users B on A.check_user = B.id
        WHERE level_of_control_1 is not null
        AND A.model = #{model}
        order by A.updated_at desc
        limit 10;
    </select>



    <resultMap id="getIqcResultsExportExcel-result"
               type="pidvn.modules.iqc.models.IqcResultDto">

        <result column="lot_group" property="lotGroup" javaType="String"/>
        <result column="check_date" property="checkDate" javaType="Date"/>
        <result column="request_no" property="requestNo" javaType="String"/>
        <result column="created_at" property="createdAt" javaType="Date"/>
        <result column="slip_no" property="slipNo" javaType="String"/>
        <result column="level_of_control_1" property="levelOfControl1" javaType="String"/>
        <result column="level_of_control_2" property="levelOfControl2" javaType="String"/>
        <result column="check_user_name" property="checkUserName" javaType="String"/>
    </resultMap>
    <select id="getIqcResultsExportExcel" resultMap="getIqcResultsExportExcel-result">


        <![CDATA[
        with
            T01 as (
                select
                    B.supplier, B.invoice, A.request_no, B.slip_no, B.created_at, A.check_date,
                    A.model, A.lot_group, sum(A.qty) qty, A.result1, A.result2, A.result3,
                    A.level_of_control_1, A.level_of_control_2, A.remark, C.name check_user_name,
                    GROUP_CONCAT(IFNULL(A.result1, 'NULL') SEPARATOR ', ') rs1,
                    GROUP_CONCAT(IFNULL(A.result2, 'NULL') SEPARATOR ', ') rs2,
                    GROUP_CONCAT(IFNULL(A.result3, 'NULL') SEPARATOR ', ') rs3
                from iqc_results A
                         left join iqc_request B on A.request_no = B.request_no
                         left join users C on A.check_user = C.id
                where 1=1
                  and A.request_no = #{requestNo}
                group by A.lot_group, A.model
                order by IFNULL(A.check_user, 0) asc
            )
        select
            T01.supplier, T01.invoice, T01.request_no, T01.slip_no, T01.created_at, T01.check_date,
            T01.model, T01.lot_group, T01.qty,
            CASE
                WHEN T01.rs1 REGEXP 'NULL' THEN null
                WHEN T01.rs1 REGEXP 'NG' THEN 'NG'
                ELSE 'OK'
                END AS result1,
            CASE
                WHEN T01.rs2 REGEXP 'NULL' THEN null
                WHEN T01.rs2 REGEXP 'NG' THEN 'NG'
                ELSE 'OK'
                END AS result2,
            CASE
                WHEN T01.rs3 REGEXP 'NULL' THEN null
                WHEN T01.rs3 REGEXP 'NG' THEN 'NG'
                ELSE 'OK'
                END AS result3,
            T01.level_of_control_1, T01.level_of_control_2, T01.remark, T01.check_user_name
        from T01
        ]]>
    </select>


    <resultMap id="getIqcResultsExportExcelOrderByModel-result"
               type="pidvn.modules.iqc.models.IqcResultDto">

        <result column="lot_group" property="lotGroup" javaType="String"/>
        <result column="check_date" property="checkDate" javaType="Date"/>
        <result column="request_no" property="requestNo" javaType="String"/>
        <result column="created_at" property="createdAt" javaType="Date"/>
        <result column="slip_no" property="slipNo" javaType="String"/>
        <result column="level_of_control_1" property="levelOfControl1" javaType="String"/>
        <result column="level_of_control_2" property="levelOfControl2" javaType="String"/>
        <result column="check_user_name" property="checkUserName" javaType="String"/>
    </resultMap>
    <select id="getIqcResultsExportExcelOrderByModel" resultMap="getIqcResultsExportExcelOrderByModel-result">


        <![CDATA[
        with
            T01 as (
                select
                    B.supplier, B.invoice, A.request_no, B.slip_no, B.created_at, A.check_date,
                    A.model, A.lot_group, sum(A.qty) qty, A.result1, A.result2, A.result3,
                    A.level_of_control_1, A.level_of_control_2, A.remark, C.name check_user_name,
                    GROUP_CONCAT(IFNULL(A.result1, 'NULL') SEPARATOR ', ') rs1,
                    GROUP_CONCAT(IFNULL(A.result2, 'NULL') SEPARATOR ', ') rs2,
                    GROUP_CONCAT(IFNULL(A.result3, 'NULL') SEPARATOR ', ') rs3
                from iqc_results A
                         left join iqc_request B on A.request_no = B.request_no
                         left join users C on A.check_user = C.id
                where 1=1
                  and A.request_no = #{requestNo}
                group by A.lot_group, A.model
                order by A.model asc, A.lot_group asc
            )
        select
            T01.supplier, T01.invoice, T01.request_no, T01.slip_no, T01.created_at, T01.check_date,
            T01.model, T01.lot_group, T01.qty,
            CASE
                WHEN T01.rs1 REGEXP 'NULL' THEN null
                WHEN T01.rs1 REGEXP 'NG' THEN 'NG'
                ELSE 'OK'
                END AS result1,
            CASE
                WHEN T01.rs2 REGEXP 'NULL' THEN null
                WHEN T01.rs2 REGEXP 'NG' THEN 'NG'
                ELSE 'OK'
                END AS result2,
            CASE
                WHEN T01.rs3 REGEXP 'NULL' THEN null
                WHEN T01.rs3 REGEXP 'NG' THEN 'NG'
                ELSE 'OK'
                END AS result3,
            T01.level_of_control_1, T01.level_of_control_2, T01.remark, T01.check_user_name
        from T01
        ]]>
    </select>



</mapper>