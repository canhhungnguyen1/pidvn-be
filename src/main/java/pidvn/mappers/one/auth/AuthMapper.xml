<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pidvn.mappers.one.auth.AuthMapper">

    <resultMap id="getRoleAndPermissionByUsername-result"
               type="pidvn.auth.models.AuthVo">
        <result column="user_id" property="userId" javaType="Integer"/>
        <result column="role_id" property="roleId" javaType="Integer"/>
        <result column="user_id" property="userId" javaType="Integer"/>
        <result column="role_name" property="roleName" javaType="String"/>
        <result column="permission" property="permission" javaType="String"/>
        <result column="username" property="username" javaType="String"/>

    </resultMap>
    <select id="getRoleAndPermissionByUsername" resultMap="getRoleAndPermissionByUsername-result">
        select
            U.id user_id, U.username, U.password, U.email, U.position_id, U.subsection_id, U.status,
            ifnull(group_concat(R.name), '') as roles,
            ifnull(group_concat(REGEXP_REPLACE(ifnull(R.permission,'["super_admin"]'),'(")|(\\[)|(\\])','')),'')  permissions
        from role_user RU
        inner join roles R on RU.role_id = R.id
        inner join users U on RU.user_id = U.id
        where U.username = #{username} and U.status = 1

    </select>

    <resultMap id="getUserInfo-result"
               type="pidvn.auth.models.AccountVo">

        <result column="username" property="username" javaType="String"/>
        <result column="name" property="fullName" javaType="String"/>
        <result column="email" property="email" javaType="String"/>
        <result column="subsection" property="subsection" javaType="String"/>
        <result column="subsection_code" property="subsectionCode" javaType="String"/>
        <result column="section" property="section" javaType="String"/>
        <result column="section_code" property="sectionCode" javaType="String"/>
        <result column="position_id" property="positionId" javaType="Integer"/>
    </resultMap>
    <select id="getUserInfo"
            resultMap="getUserInfo-result">

        select
            A.id, A.username, A.name, A.email, B.name as subsection, C.name as section,
            B.code as subsection_code, C.code as section_code, A.position_id, D.name as position
        from users A
        inner join subsection B on A.subsection_id = B.id
        inner join section C on C.id = B.section_id
        inner join position D on A.position_id = D.id
        where A.username = #{username}

    </select>


    <resultMap id="getRoleAndPermissionByUsernameV2-result"
               type="pidvn.auth.models.RolePermissionVo">

        <result column="role" property="role" javaType="String"/>
        <result column="permission" property="permission" javaType="String"/>

    </resultMap>
    <select id="getRoleAndPermissionByUsernameV2"
            resultMap="getRoleAndPermissionByUsernameV2-result">

        select group_concat(role) role, permission from (
            select
                R.name as role,
                nvl(REGEXP_REPLACE(R.permission,'(")|(\\[)|(\\])',''),'') permission
                    , U.username
            from role_user RU
                inner join (
                        select  distinct A.name, A.permission, A.id FROM pidvn.roles A left join permissions B
                        on A.permission like concat('%',B.name,'%') where (B.name like '%_find' or B.name like '%_action'
                    ) or A.name ='super_admin') R
                on RU.role_id = R.id
            right join users U on RU.user_id = U.id
        )A
        where 1=1 and role is not null and username = #{username}
        group by permission

    </select>


</mapper>